from _typeshed import Incomplete

class SMIRKSMismatchError(Exception):
    msg: Incomplete
    def __init__(self, msg) -> None: ...

class SMIRKSParsingError(Exception):
    msg: Incomplete
    def __init__(self, msg) -> None: ...

class ChemicalEnvironment:
    _graph: Incomplete
    def _graph_edges(self, data: bool = False, node: Incomplete = None) -> Incomplete: ...
    class Atom:
        index: Incomplete
        ring: Incomplete
        is_atom: bool
        def __init__(self, or_types: Incomplete | None = None, and_types: Incomplete | None = None, index: int = 0, ring: Incomplete | None = None) -> None: ...
        def is_generic(self): ...
        def as_smarts(self): ...
        def as_smirks(self): ...
        def add_or_type(self, or_base, or_decorators) -> None: ...
        def add_and_type(self, and_type) -> None: ...
        @property
        def or_types(self): ...
        @or_types.setter
        def or_types(self, new_or_types) -> None: ...
        @property
        def and_types(self): ...
        @and_types.setter
        def and_types(self, new_and_types) -> None: ...
    class Bond(Atom):
        is_atom: bool
        def __init__(self, or_types: Incomplete | None = None, and_types: Incomplete | None = None, index: int = 0) -> None: ...
        def as_smarts(self): ...
        def as_smirks(self): ...
        def get_order(self): ...
    no_bracket_atom_reg: Incomplete
    atom_reg: Incomplete
    bond_regs: Incomplete
    label: Incomplete
    replacements: Incomplete
    def __init__(self, smirks: Incomplete | None = None, label: Incomplete | None = None, replacements: Incomplete | None = None) -> None: ...
    def is_valid(self, smirks: Incomplete | None = None): ...
    def as_smirks(self, smarts: bool = False): ...
    def select_atom(self, descriptor: Incomplete | None = None): ...
    def get_component_list(self, component_type, descriptor: Incomplete | None = None): ...
    def select_bond(self, descriptor: Incomplete | None = None): ...
    def add_atom(self, bond_to_atom, bond_or_types: Incomplete | None = None, bond_and_types: Incomplete | None = None, new_or_types: Incomplete | None = None, new_and_types: Incomplete | None = None, new_atom_index: Incomplete | None = None, new_atom_ring: Incomplete | None = None, beyond_beta: bool = False): ...
    def remove_atom(self, atom, only_empty: bool = False): ...
    def get_atoms(self): ...
    def get_bonds(self, atom: Incomplete | None = None): ...
    def get_bond(self, atom1, atom2): ...
    def get_indexed_atoms(self): ...
    def get_unindexed_atoms(self): ...
    def get_alpha_atoms(self): ...
    def get_beta_atoms(self): ...
    def get_indexed_bonds(self): ...
    def get_unindexed_bonds(self): ...
    def get_alpha_bonds(self): ...
    def get_beta_bonds(self): ...
    def is_alpha(self, component): ...
    def is_unindexed(self, component): ...
    def is_indexed(self, component): ...
    def is_beta(self, component): ...
    def get_type(self): ...
    def get_neighbors(self, atom): ...
    def get_valence(self, atom): ...
    def get_bond_order(self, atom): ...
