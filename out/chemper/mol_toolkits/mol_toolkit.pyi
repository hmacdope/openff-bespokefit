from _typeshed import Incomplete
from chemper.chemper_utils import get_data_path as get_data_path
from chemper.mol_toolkits import cp_openeye as cp_openeye, cp_rdk as cp_rdk
from chemper.mol_toolkits.adapters import AtomAdapter as AtomAdapter, BondAdapter as BondAdapter, MolAdapter as MolAdapter

HAS_OE: bool
HAS_RDK: bool

class Mol(MolAdapter):
    mol: Incomplete
    __class__: Incomplete
    def __init__(self, mol) -> None: ...
    @staticmethod
    def from_smiles(smiles): ...
    def set_aromaticity_mdl(self) -> None: ...
    def get_atoms(self) -> None: ...
    def get_atom_by_index(self, idx) -> None: ...
    def get_bonds(self) -> None: ...
    def get_bond_by_index(self, idx) -> None: ...
    def get_bond_by_atoms(self, atom1, atom2) -> None: ...
    def smirks_search(self, smirks) -> None: ...
    def get_smiles(self) -> None: ...

class Atom:
    atom: Incomplete
    __class__: Incomplete
    def __init__(self, atom) -> None: ...

class Bond:
    bond: Incomplete
    __class__: Incomplete
    def __init__(self, bond) -> None: ...

def check_toolkit(toolkit: Incomplete | None = None): ...
def check_mol_file(file_name): ...
def mols_from_mol2(mol2_file, toolkit: Incomplete | None = None): ...
