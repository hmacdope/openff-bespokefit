from ..exceptions import ValidationError as ValidationError
from ..physical_constants import constants as constants
from ..util import provenance_stamp as provenance_stamp, unnp as unnp, update_with_error as update_with_error
from .chgmult import validate_and_fill_chgmult as validate_and_fill_chgmult
from .nucleus import reconcile_nucleus as reconcile_nucleus
from .regex import VERSION_PATTERN as VERSION_PATTERN
from _typeshed import Incomplete

def from_input_arrays(*, enable_qm: bool = True, enable_efp: bool = True, missing_enabled_return_qm: str = 'error', missing_enabled_return_efp: str = 'error', geom: Incomplete | None = None, elea: Incomplete | None = None, elez: Incomplete | None = None, elem: Incomplete | None = None, mass: Incomplete | None = None, real: Incomplete | None = None, elbl: Incomplete | None = None, name: Incomplete | None = None, units: str = 'Angstrom', input_units_to_au: Incomplete | None = None, fix_com: Incomplete | None = None, fix_orientation: Incomplete | None = None, fix_symmetry: Incomplete | None = None, fragment_separators: Incomplete | None = None, fragment_charges: Incomplete | None = None, fragment_multiplicities: Incomplete | None = None, molecular_charge: Incomplete | None = None, molecular_multiplicity: Incomplete | None = None, fragment_files: Incomplete | None = None, hint_types: Incomplete | None = None, geom_hints: Incomplete | None = None, geom_unsettled: Incomplete | None = None, variables: Incomplete | None = None, speclabel: bool = True, tooclose: float = 0.1, zero_ghost_fragments: bool = False, nonphysical: bool = False, mtol: float = 0.001, copy: bool = True, verbose: int = 1): ...
def from_arrays(*, geom: Incomplete | None = None, elea: Incomplete | None = None, elez: Incomplete | None = None, elem: Incomplete | None = None, mass: Incomplete | None = None, real: Incomplete | None = None, elbl: Incomplete | None = None, name: Incomplete | None = None, units: str = 'Angstrom', input_units_to_au: Incomplete | None = None, fix_com: Incomplete | None = None, fix_orientation: Incomplete | None = None, fix_symmetry: Incomplete | None = None, fragment_separators: Incomplete | None = None, fragment_charges: Incomplete | None = None, fragment_multiplicities: Incomplete | None = None, molecular_charge: Incomplete | None = None, molecular_multiplicity: Incomplete | None = None, comment: Incomplete | None = None, provenance: Incomplete | None = None, connectivity: Incomplete | None = None, fragment_files: Incomplete | None = None, hint_types: Incomplete | None = None, geom_hints: Incomplete | None = None, geom_unsettled: Incomplete | None = None, variables: Incomplete | None = None, domain: str = 'qm', missing_enabled_return: str = 'error', np_out: bool = True, speclabel: bool = True, tooclose: float = 0.1, zero_ghost_fragments: bool = False, nonphysical: bool = False, mtol: float = 0.001, copy: bool = True, verbose: int = 1): ...
def validate_and_fill_units(name: Incomplete | None = None, units: str = 'Angstrom', input_units_to_au: Incomplete | None = None, comment: Incomplete | None = None, provenance: Incomplete | None = None, connectivity: Incomplete | None = None, always_return_iutau: bool = False): ...
def validate_and_fill_frame(extern, fix_com: Incomplete | None = None, fix_orientation: Incomplete | None = None, fix_symmetry: Incomplete | None = None): ...
def validate_and_fill_efp(fragment_files: Incomplete | None = None, hint_types: Incomplete | None = None, geom_hints: Incomplete | None = None): ...
def validate_and_fill_geometry(geom: Incomplete | None = None, tooclose: float = 0.1, copy: bool = True): ...
def validate_and_fill_nuclei(nat, elea: Incomplete | None = None, elez: Incomplete | None = None, elem: Incomplete | None = None, mass: Incomplete | None = None, real: Incomplete | None = None, elbl: Incomplete | None = None, speclabel: bool = True, nonphysical: bool = False, mtol: float = 0.001, verbose: int = 1): ...
def validate_and_fill_fragments(nat, fragment_separators: Incomplete | None = None, fragment_charges: Incomplete | None = None, fragment_multiplicities: Incomplete | None = None): ...
def validate_and_fill_unsettled_geometry(geom_unsettled, variables): ...
