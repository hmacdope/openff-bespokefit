import datetime
from typing import Any, Dict, Generator, Iterable, List, Optional, Sequence, Union

def make_list(obj: Optional[Union[_T, Sequence[_T]]]) -> Optional[List[_T]]: ...
def chunk_iterable(it: Iterable[_T], chunk_size: int) -> Generator[List[_T], None, None]: ...
def seconds_to_hms(seconds: Union[float, int]) -> str: ...
def recursive_normalizer(value: Any, digits: int = 10, lowercase: bool = True) -> Any: ...
def calculate_limit(max_limit: int, given_limit: Optional[int]) -> int: ...
def hash_dict(d: Dict[str, Any]) -> str: ...
def capture_all_output(top_logger: str): ...
def now_at_utc() -> datetime.datetime: ...
