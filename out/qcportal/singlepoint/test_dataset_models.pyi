from _typeshed import Incomplete
from qcportal import PortalClient as PortalClient
from qcportal.molecules import Molecule as Molecule
from qcportal.record_models import PriorityEnum as PriorityEnum
from qcportal.singlepoint import SinglepointDatasetNewEntry as SinglepointDatasetNewEntry
from qcportal.singlepoint.record_models import QCSpecification as QCSpecification, SinglepointProtocols as SinglepointProtocols

test_entries: Incomplete
test_specs: Incomplete

def entry_extra_compare(ent1, ent2) -> None: ...
def record_compare(rec, ent, spec) -> None: ...
def test_singlepoint_dataset_model_add_get_entry(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_add_entry_duplicate(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_delete_entry(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_add_get_spec(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_add_spec_duplicate(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_delete_spec(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_remove_record(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_submit(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_submit_missing(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_iterate_updated(snowflake_client: PortalClient): ...
def test_singlepoint_dataset_model_modify_records(snowflake_client: PortalClient): ...
