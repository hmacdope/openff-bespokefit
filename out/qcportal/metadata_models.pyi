from typing import Any, Dict, List, Optional, Sequence, Tuple

class InsertMetadata:
    error_description: Optional[str]
    errors: List[Tuple[int, str]]
    inserted_idx: List[int]
    existing_idx: List[int]
    @property
    def n_inserted(self): ...
    @property
    def n_existing(self): ...
    @property
    def n_errors(self): ...
    @property
    def error_idx(self): ...
    @property
    def success(self): ...
    @property
    def error_string(self): ...
    def sort_fields(cls, v): ...
    def check_all_indices(cls, values): ...
    def dict(self) -> Dict[str, Any]: ...
    @staticmethod
    def merge(metadata: Sequence[InsertMetadata]) -> InsertMetadata: ...

class DeleteMetadata:
    error_description: Optional[str]
    errors: List[Tuple[int, str]]
    deleted_idx: List[int]
    n_children_deleted: int
    @property
    def n_deleted(self): ...
    @property
    def n_errors(self): ...
    @property
    def error_idx(self): ...
    @property
    def success(self): ...
    @property
    def error_string(self): ...
    def sort_fields(cls, v): ...
    def check_all_indices(cls, values): ...
    def dict(self) -> Dict[str, Any]: ...

class UpdateMetadata:
    error_description: Optional[str]
    errors: List[Tuple[int, str]]
    updated_idx: List[int]
    n_children_updated: int
    @property
    def n_updated(self): ...
    @property
    def n_errors(self): ...
    @property
    def error_idx(self): ...
    @property
    def success(self): ...
    @property
    def error_string(self): ...
    def sort_fields(cls, v): ...
    def check_all_indices(cls, values): ...
    def dict(self) -> Dict[str, Any]: ...

class TaskReturnMetadata:
    error_description: Optional[str]
    rejected_info: List[Tuple[int, str]]
    accepted_ids: List[int]
    @property
    def n_accepted(self): ...
    @property
    def n_rejected(self): ...
    @property
    def rejected_ids(self): ...
    @property
    def success(self): ...
    @property
    def error_string(self): ...
    def sort_fields(cls, v): ...
    def dict(self) -> Dict[str, Any]: ...
